// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}


model User {
  id            String    @id @default(uuid())
  password      String
  email         String    @unique
  name          String
  image         String? 
  adminRole     Boolean         @default(false)
  createdAt     DateTime        @default(now())
  updateAt      DateTime        @updatedAt
}

model Genre {
  id    String   @id @default(uuid())
  name  String   @unique
  games VideoGameProductGenre[]
}

model Platform {
  id    String   @id @default(uuid())
  name  String   @unique
  games VideoGameProductPlatform[]
}

model Publisher {
  id    String   @id @default(uuid())
  name  String   @unique
  games VideoGameProductPublisher[]
}

model VideoGameProduct {
  id            String      @id @default(uuid())
  title         String
  description   String
  playerCount   Int
  releaseDate   String
  developer     String
  coverImageUrl String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  genres        VideoGameProductGenre[]
  platforms     VideoGameProductPlatform[]
  publishers    VideoGameProductPublisher[]
}

model VideoGameProductGenre {
  id        String   @id @default(uuid())
  videoGame VideoGameProduct @relation(fields: [videoGameProductId], references: [id])
  videoGameProductId String
  genre     Genre @relation(fields: [genreId], references: [id])
  genreId   String
}

model VideoGameProductPlatform {
  id        String   @id @default(uuid())
  videoGame VideoGameProduct @relation(fields: [videoGameProductId], references: [id])
  videoGameProductId String
  platform  Platform @relation(fields: [platformId], references: [id])
  platformId String
}

model VideoGameProductPublisher {
  id        String   @id @default(uuid())
  videoGame VideoGameProduct @relation(fields: [videoGameProductId], references: [id])
  videoGameProductId String
  publisher Publisher @relation(fields: [publisherId], references: [id])
  publisherId String
}